{"ast":null,"code":"var _jsxFileName = \"/workspaces/react-smiple-chatbot/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport ChatBot from 'react-simple-chatbot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [chatHistory, setChatHistory] = useState([]);\n  const handleUserMessage = async event => {\n    const userInput = event.message;\n\n    // Make a POST request to your Python server\n    try {\n      const response = await axios.post('http://localhost:5000/query/', {\n        query: userInput\n      }); // Specify the full URL including the port\n\n      // Update chat history with the received response\n      const updatedHistory = [...chatHistory, {\n        user: userInput,\n        bot: response.data.response\n      }];\n      setChatHistory(updatedHistory);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ChatBot, {\n    steps: [{\n      id: '1',\n      message: 'What is your query?',\n      trigger: '2'\n    }, {\n      id: '2',\n      user: true,\n      trigger: '3'\n    }, {\n      id: '3',\n      message: () => {\n        handleUserInput(previousValue);\n      },\n      trigger: '2'\n    }],\n    floating: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sBAUHeYzwT3KbtjkJMoWEhqkOSA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ChatBot","jsxDEV","_jsxDEV","App","_s","chatHistory","setChatHistory","useState","handleUserMessage","event","userInput","message","response","axios","post","query","updatedHistory","user","bot","data","error","console","steps","id","trigger","handleUserInput","previousValue","floating","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/react-smiple-chatbot/src/App.js"],"sourcesContent":["import './App.css';\nimport ChatBot from 'react-simple-chatbot'\n\nfunction App() {\n  const [chatHistory, setChatHistory] = useState([]);\n\n  const handleUserMessage = async (event) => {\n    const userInput = event.message;\n\n    // Make a POST request to your Python server\n    try {\n      const response = await axios.post('http://localhost:5000/query/', { query: userInput }); // Specify the full URL including the port\n\n      // Update chat history with the received response\n      const updatedHistory = [...chatHistory, { user: userInput, bot: response.data.response }];\n      setChatHistory(updatedHistory);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <ChatBot\n        steps={[\n          {\n            id: '1',\n            message: 'What is your query?',\n            trigger: '2',\n          },\n          {\n            id: '2',\n            user: true,\n            trigger: '3',\n          },\n          {\n            id: '3',\n            message : () => {\n              handleUserInput(previousValue)\n            },\n            trigger: '2'\n          },\n          \n        ]}\n        floating={true}\n      />\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,OAAO,MAAM,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMC,iBAAiB,GAAG,MAAOC,KAAK,IAAK;IACzC,MAAMC,SAAS,GAAGD,KAAK,CAACE,OAAO;;IAE/B;IACA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAC,8BAA8B,EAAE;QAAEC,KAAK,EAAEL;MAAU,CAAC,CAAC,CAAC,CAAC;;MAEzF;MACA,MAAMM,cAAc,GAAG,CAAC,GAAGX,WAAW,EAAE;QAAEY,IAAI,EAAEP,SAAS;QAAEQ,GAAG,EAAEN,QAAQ,CAACO,IAAI,CAACP;MAAS,CAAC,CAAC;MACzFN,cAAc,CAACU,cAAc,CAAC;IAChC,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAED,oBACElB,OAAA,CAACF,OAAO;IACJsB,KAAK,EAAE,CACL;MACEC,EAAE,EAAE,GAAG;MACPZ,OAAO,EAAE,qBAAqB;MAC9Ba,OAAO,EAAE;IACX,CAAC,EACD;MACED,EAAE,EAAE,GAAG;MACPN,IAAI,EAAE,IAAI;MACVO,OAAO,EAAE;IACX,CAAC,EACD;MACED,EAAE,EAAE,GAAG;MACPZ,OAAO,EAAGA,CAAA,KAAM;QACdc,eAAe,CAACC,aAAa,CAAC;MAChC,CAAC;MACDF,OAAO,EAAE;IACX,CAAC,CAED;IACFG,QAAQ,EAAE;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAER;AAAC3B,EAAA,CA3CQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA6CZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}